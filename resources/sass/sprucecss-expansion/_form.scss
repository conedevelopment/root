@use 'sass:color';
@use '~sprucecss/scss/spruce';

.form-group-stack {
    @include spruce.layout-stack(spruce.spacer(s));
}

.form {
    &--inline {
        align-items: center;
        display: flex;
        flex-wrap: wrap;
        gap: spruce.spacer(s);
    }
}

.form-group {
    &--inline {
        align-items: center;
        display: flex;
        gap: spruce.spacer(s);

        > * + * {
            margin-block-start: 0;
        }
    }

    &--reset {
        display: flex;
        justify-content: end;
        margin-block-start: spruce.spacer(s);
    }

    &--autocomplete {
        position: relative;
    }
}

.form-row {
    &--accordion {
        .accordion-wrapper {
            margin-block-start: spruce.spacer(s);
        }
    }
}

.form-control {
    &[type='date'],
    &[type='time'] {
        padding-block: 0.43em;
    }
}

.form-file {
    display: block;
}

.form-group-inner {
    &--stack {
        align-items: center;
        display: flex;
        flex-direction: column;

        @include spruce.breakpoint(xs) {
            flex-direction: row;

            > * {
                border-radius: spruce.$form-control-border-radius;
            }

            > *:first-child {
                border-end-end-radius: 0;
                border-start-end-radius: 0;
                opacity: 0.4;
            }

            > * + * {
                border-end-start-radius: 0;
                border-start-start-radius: 0;
                margin-block-start: 0;
                margin-inline-start: -1px;
            }
        }

        > *:first-child {
            border-end-end-radius: 0;
            border-end-start-radius: 0;
        }

        > * + * {
            border-start-end-radius: 0;
            border-start-start-radius: 0;
            margin-block-start: -1px;
        }
    }
}

select {
    option[disabled]:first-child {
        color: spruce.color(secondary);
        cursor: not-allowed;
        font-size: spruce.$font-size-sm;
        font-weight: 700;
        text-transform: uppercase;
    }
}

.form-range {
    width: 100%;
}

.form-range-display {
    align-items: center;
    display: flex;
    justify-content: space-between;
    margin-block-start: spruce.spacer(xs);
    position: relative;

    &::before {
        border-bottom: 1px dashed spruce.color(border, form);
        content: '';
        height: 0;
        inset: 50% 0 auto 0;
        position: absolute;
        z-index: 1;
    }

    &__item {
        color: spruce.color(text);
        position: relative;
        z-index: 10;

        &.is-min,
        &.is-max {
            background-color: spruce.color(background);
        }

        &.is-min {
            padding-right: spruce.spacer(xs);
        }

        &.is-max {
            padding-left: spruce.spacer(xs);
        }

        &.is-current {
            background-color: spruce.color(range-background, form);
            border: 1px solid spruce.color(range-border, form);
            border-radius: spruce.$border-radius-sm;
            font-size: spruce.$font-size-base;
            font-weight: 700;
            padding: spruce.spacer(xxs) spruce.spacer(xs);
        }
    }
}

.form-label {
    &__required-marker {
        color: spruce.color(danger, alert);
    }
}

.tag-control {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: spruce.spacer(xs);
    padding: 0.5em;

    input {
        border: 0;
        border-radius: 0;
        box-shadow: none;
        flex-grow: 1;
        height: 1.5rem;
    }
}

.tag {
    align-items: stretch;
    background-color: spruce.color(primary);
    border-radius: spruce.$form-control-border-radius;
    display: inline-flex;
    font-size: spruce.$font-size-sm;

    &__label {
        color: #fff;
        display: inline-block;
        font-weight: 500;
        margin: 0;
        padding: 0.15em 0.45em;
    }

    &__remove {
        align-items: center;
        background-color: color.adjust(spruce.color(primary, $only-color: true), $lightness: -10%);
        border: 0;
        border-radius: 0 spruce.$form-control-border-radius spruce.$form-control-border-radius 0;
        color: hsl(0 0% 100%);
        cursor: pointer;
        display: flex;
        padding: 0 0.5em;
        transition-duration: spruce.transition(duration);
        transition-property: background-color;
        transition-timing-function: spruce.transition(timing-function);

        &:hover {
            background-color: color.adjust(spruce.color(primary, $only-color: true), $lightness: -15%);
        }

        svg {
            height: 0.75em;
            width: 0.75em;
        }
    }
}

[role='listbox'] {
    background-color: spruce.color(background, form);
    border: 1px solid spruce.color(border, form);
    border-end-end-radius: spruce.$form-control-border-radius;
    border-end-start-radius: spruce.$form-control-border-radius;
    inset: calc(100% - 1px) spruce.spacer(xs) auto spruce.spacer(xs);
    list-style: none;
    margin-block: 0;
    padding: spruce.spacer(xs);
    position: absolute;

    li {
        border-radius: spruce.$border-radius-sm;
        padding-inline: spruce.spacer(xs);

        &.is-selected {
            background-color: color.adjust(spruce.color(primary, $only-color: true), $lightness: 20%);
            color: hsl(0 0% 100%);
        }

        &:hover,
        &.is-active {
            background-color: spruce.color(primary);
            color: hsl(0 0% 100%);
        }
    }
}
